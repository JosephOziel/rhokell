# smallfuck interpreter
# give it an expression of the syntax smf(prog, mem)
# where prog is the program, mem is the initial memory


smf(prog, mem) = eval(prep(prog, Nil()), mem);

prep(Nil(), x) = x;
prep(Cons(LBrace(), rem), before) = expand(before, prep(rem, Nil()));
prep(Cons(RBrace(), rem), before) = Pair(before, prep(rem, Nil()));
prep(Cons(x, rem), before) = prep(rem, append(before, Cons(x, Nil())));

# before [inside_loop] after
expand(before, Pair(inside_loop, after)) = append(before, Cons(While(inside_loop), after));

append(Nil(), x) = x;
append(Cons(x, y), z) = Cons(x, push(y, z));

eval(Nil(), mem) = mem;
eval(prog, Nil()) = eval(prog, Cons(O(), Nil()));
eval(Cons(Flip(), rem), Cons(I(), x)) = eval(rem, Cons(O(), x));
eval(Cons(Flip(), rem), Cons(O(), x)) = eval(rem, Cons(I(), x));
eval(Cons(Right(), rem), Cons(b, x)) = hold(b, eval(rem, x));
eval(Cons(Left(), rem), mem) = MoveLeft(rem, mem);
eval(Cons(While(body), rem), mem) = loop(body, mem, rem);

hold(b, MoveLeft(rem, mem)) = eval(rem, Cons(b, rem));
hold(b, x) = Cons(b, x);

loop(b, Cons(O(), mem), rem) = eval(rem, Cons(O(), mem));
loop(b, Cons(I(), mem), rem) = loop(b, eval(b, Cons(I(), mem)), rem);
