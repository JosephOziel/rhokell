(main) = (print_data (tr (input)) (z) (z));

(tr (byte a b)) = (c a b (tr (input)));
(tr (EOF)) = (n);

(print_data x (s (s (s (s (s (s (s (z)))))))) y) = 
    (do 
        (o (0) (A))
        (print_data x (z) (mod y))
        (if (mod y))
    );
(print_data (c w x y) z v) = 
    (do
        (print_c)
        (o (space))
        (o (lparen))
        (print_hex w)
        (o (rparen))
        (o (space))
        (o (lparen))
        (print_hex x)
        (o (rparen))
        (o (space))
        (print_data y (s z) (mod v))
        (o (rparen))
        (if (mod v))
    );
(print_data (n)) = (print_n);

(mod (s (s (s (s (s (s (s (s (s (s (s (s (z)))))))))))))) = (z);
(mod x) = (s x);

(if (z)) = (o (0) (A));

(print_code (c x y z)) = 
    (do
        (o x y)
        (print_code z)
    );

(print_c) = (o (lparen) (6) (3));
(print_n) = (o (lparen) (6) (E) (rparen));

(space) = (b (2) (0));
(lparen) = (b (2) (8));
(rparen) = (b (2) (9));

(print_hex (A)) = (o (4) (1));
(print_hex (B)) = (o (4) (2));
(print_hex (C)) = (o (4) (3));
(print_hex (D)) = (o (4) (4));
(print_hex (E)) = (o (4) (5));
(print_hex (F)) = (o (4) (6));
(print_hex d) = (o (3) d);

(o (b x y)) = (o x y);
(o x y) = (then (output (byte x y)) (o));
(then a b) = b;
(do a) = (do);
